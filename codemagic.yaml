workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 30
    instance_type: mac_mini_m1
    environment:
      groups:
        - appstore_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY) - https://docs.codemagic.io/code-signing-yaml/signing-ios/
        - certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY)
        - other # <-- (Includes APP_STORE_APP_ID - Put the app id number here. This is found in App Store Connect > App > General > App Information)
      # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
      vars:
        XCODE_WORKSPACE: 'pomodizer_mob_app.xcworkspace' # <-- Put the name of your Xcode workspace here
        XCODE_SCHEME: 'pomodizer_mob_app' # <-- Put the name of your Xcode scheme here
        BUNDLE_ID: 'com.oidmtruk.pomodizer' # <-- Put your Bundle Id here e.g com.domain.myapp
      node: 14.18.2
      npm: 8.4.0
      xcode: 14.0.1
      cocoapods: default
    cache:
      cache_paths:
        # - $HOME/Library/Caches/CocoaPods
        - $FCI_BUILD_DIR/node_modules
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          yarn
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
          # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios
          # agvtool new-version -all $(($BUILD_NUMBER + 1))
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      email:
        recipients:
          - oidmtruk@gmail.com
        notify:
          success: true # To not receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.

  react-native-android:
    name: React Native Android
    max_build_duration: 30
    instance_type: mac_mini_m1
    environment:
      groups:
        - keystore_credentials # <-- (Includes CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS_PASSWORD, CM_KEY_ALIAS_USERNAME)
        - other
      # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
      vars:
        PACKAGE_NAME: 'com.pomodizer.android' # <-- Put your package name here e.g. com.domain.myapp
      node: 14.18.2
      npm: 8.4.0
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          yarn
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          # echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=$CM_KEYSTORE_PATH
          EOF
      - name: Build Android release
        script: |
          # Set environment variable so it can be used to increment build number in android/app/build.gradle
          # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
          # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks alpha) + 1))
          export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
          cd android && ./gradlew assembleRelease # To generate an .aab use--> ./gradlew bundleRelease
    artifacts:
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/*.apk
    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/yaml-publishing/email
      email:
        recipients:
          - oidmtruk@gmail.com
          - 197501alex@gmail.com
        notify:
          success: true # To not receive a notification when a build succeeds
          failure: true # To not receive a notification when a build fails
      # slack:
      #   # See the following link about how to connect your Slack account - https://docs.codemagic.io/yaml-publishing/slack
      #   channel: '#channel-name'
      #   notify_on_build_start: true # To receive a notification when a build starts
      #   notify:
      #     success: true # To receive a notification when a build succeeds
      #     failure: false # To not receive a notification when a build fails
      # google_play:
      #   # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/yaml-publishing/google-play
      #   credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      #   track: alpha # <-- Any default or custom track that is not in draft status
